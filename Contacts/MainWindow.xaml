<Window x:Name="ContactWindow" x:Class="Contacts.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Contacts"
        xmlns:vm="clr-namespaces:Contacts.ViewModel"
        xmlns:vm1="clr-namespace:Contacts.ViewModel"
        mc:Ignorable="d"
        WindowStyle="None" AllowsTransparency="True"
        Title="Contacts" Height="400" Width="500" Icon="/Resources/ContactsApp_96x96.ico"
        Background="#FF26292F" MinWidth="500" MinHeight="400" WindowStartupLocation="CenterScreen" MouseDown="ContactWindow_MouseDown">
    <Window.DataContext>
        <vm1:MainVM/>
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <!--Стиль кнопок на рамке окна-->
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="UITextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="UIButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="#FF31343C"/>-->
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#0BCDFF"/>-->
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>-->
                                <Setter TargetName="border" Property="Height" Value="45"/>
                                <Setter TargetName="border" Property="Width" Value="45"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid" Margin="0">
        <!--Синий бордер вокруг окна-->
        <Border x:Name="WindowBorder" Background="#2D2D30" BorderBrush="#0079CB" BorderThickness=".8">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="#0079CB"/>
            </Border.Effect>
        </Border>

        <!--Кнопки на рамке окна-->
        <!--TODO: отсортировать элементы слева направо и сверху вниз-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="HeadWindowStackPanel" Orientation="Horizontal" HorizontalAlignment="Right">
                <!--Кнопка для сворачивания окна-->
                <Button x:Name="MinimizeButton" Grid.Column="2" VerticalAlignment="Top" Width="34" Height="26" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Grid x:Name="MinimizeButtonGrid" MaxHeight="9" MaxWidth="9">
                        <Path Stroke="White" StrokeThickness="1" 
                              Stretch="None" RenderOptions.EdgeMode="Aliased" 
                              Data="M0,8 H8 M0,7 H8 M0,6 H8"/>
                    </Grid>
                </Button>
                <!--Кнопка для разворачивания окна-->
                <Button x:Name="MaximizeButton" Grid.Column="3" VerticalAlignment="Top" Width="34" Height="26" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Grid x:Name="MaximizeButtonGrid" MaxHeight="9" MaxWidth="9">
                        <Path Stroke="White" StrokeThickness="1" 
                              Stretch="None" RenderOptions.EdgeMode="Aliased" 
                              Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"/>
                    </Grid>
                </Button>
                <!--Кнопка закрытия окна-->
                <Button x:Name="CloseButton" Grid.Column="4" VerticalAlignment="Top" Width="34" Height="26" WindowChrome.IsHitTestVisibleInChrome="True" Click="CloseButton_Click">
                    <Viewbox Width="16" Height="16">
                        <Canvas Width="24" Height="24">
                            <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" 
                                  Fill="White" />
                        </Canvas>
                    </Viewbox>
                </Button>
                <!--Кнопка закрытия окна-->
            </StackPanel>
        </Grid>

        <Grid x:Name="ContactGrid" Margin="0,20,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox x:Name="EditContactGroupBox" Header="Edit Contact" Margin="15,1,5,65" Foreground="White" BorderBrush="White">
                <Grid x:Name="EditContactGrid">
                    <TextBlock x:Name="NameEditContactTextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Name:" VerticalAlignment="Top" Margin="3,5,0,0" Height="16" Width="34"/>
                    <TextBox x:Name="NameEditContactTextBox" 
                         Style="{DynamicResource UITextBoxStyle}" 
                         Margin="3,25,0,248" 
                         Background="#FF31343C" 
                         BorderBrush="#FF31343C" 
                         Foreground="White" 
                         MinWidth="202" 
                         HorizontalContentAlignment="Stretch" 
                         HorizontalAlignment="Left" 
                         Width="{Binding ActualWidth, ElementName=EditContactGrid, Mode=OneWay}" 
                         Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" Height="18" VerticalAlignment="Top"/>
                    <TextBlock x:Name="PhoneNumberEditContactTextBlock" HorizontalAlignment="Left" Margin="3,48,0,0" TextWrapping="Wrap" Text="Phone Number:" VerticalAlignment="Top" Height="16" Width="83"/>
                    <TextBox x:Name="PhoneNumberEditContactTextBox" HorizontalAlignment="Left" Margin="3,69,0,0" VerticalAlignment="Top" Style="{DynamicResource UITextBoxStyle}" Background="#FF31343C" BorderBrush="#FF31343C" Foreground="White" MinWidth="202" Width="{Binding ActualWidth, ElementName=EditContactGrid, Mode=OneWay}" Text="{Binding Phone, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" Height="18"/>
                    <TextBlock x:Name="EmailEditContactTextBlock" HorizontalAlignment="Left" Margin="3,92,0,0" TextWrapping="Wrap" Text="Email:" VerticalAlignment="Top" Height="16" Width="31"/>
                    <TextBox x:Name="EmailEditContactTextBox" HorizontalAlignment="Left" Margin="3,113,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=EditContactGrid, Mode=OneWay}" Style="{DynamicResource UITextBoxStyle}" Background="#FF31343C" BorderBrush="#FF31343C" Foreground="White" MinWidth="202" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" Height="18"/>
                </Grid>
            </GroupBox>
            <GroupBox x:Name="ReadContactGroupBox" Header="Read Contact" Margin="5,0,15,65" Grid.Column="1" Foreground="White" BorderBrush="White">
                <Grid x:Name="ReadContactGrid">
                    <TextBlock x:Name="NameReadContactTextBlock" HorizontalAlignment="Left" Margin="3,5,0,0" TextWrapping="Wrap" Text="Name:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="NameTextBlock" HorizontalAlignment="Left" Margin="3,25,0,0" Text="{Binding Text, ElementName=NameEditContactTextBox}" VerticalAlignment="Top" FontWeight="Bold" MinWidth="202"/>
                    <TextBlock x:Name="PhoneNumberReadContactTextBlock" HorizontalAlignment="Left" Margin="3,48,0,0" TextWrapping="Wrap" Text="Phone Number:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="PhoneNumberReadContactTextBlock_Copy" HorizontalAlignment="Left" Margin="3,92,0,0" TextWrapping="Wrap" Text="Email:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="PhoneNumberTextBlock" HorizontalAlignment="Left" Margin="3,71,0,0" VerticalAlignment="Top" Text="{Binding Text, ElementName=PhoneNumberEditContactTextBox}" FontWeight="Bold" MinWidth="202"/>
                    <TextBlock x:Name="EmailTextBlock" HorizontalAlignment="Left" Margin="3,113,0,0" Text="{Binding Text, ElementName=EmailEditContactTextBox}" VerticalAlignment="Top" FontWeight="Bold" MinWidth="202"/>
                </Grid>

            </GroupBox>
            <Button x:Name="LoadButton" Content="" HorizontalAlignment="Right" Margin="0,0,19,10" VerticalAlignment="Bottom" Width="50" Height="50" Grid.Column="1" Foreground="White" BorderBrush="{x:Null}" Style="{DynamicResource UIButtonStyle}" Command="{Binding LoadCommand}" ToolTip="Load">
                <Button.Background>
                    <ImageBrush Stretch="Uniform" ImageSource="/Resources/download_50x50.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="SaveButton" Style="{DynamicResource UIButtonStyle}" Content="" HorizontalAlignment="Right" Margin="0,0,74,10" VerticalAlignment="Bottom" Width="50" Height="50" Grid.Column="1" Foreground="White" BorderBrush="{x:Null}" Command="{Binding SaveCommand}" ToolTip="Save">
                <Button.Background>
                    <ImageBrush ImageSource="/Resources/save-50x50.png" TileMode="None" Stretch="Uniform"/>
                </Button.Background>
            </Button>
        </Grid>
    </Grid>
</Window>
